#version 430 compatibility
#extension GL_ARB_compute_shader : enable
#extension GL_ARB_compute_storage_buffer_shader : enable
#extension GL_NV_shader_buffer_load : enable
#extension GL_NV_gpu_shader5 : enable

layout(local_size_x = 32, local_size_y = 32) in;
layout(rgba32f, binding = 0) uniform image2D img_output;

layout(std430, binding=4) buffer coul
{
	  float couleur1[];
};

void main() {
  
  // get index in global work group i.e x,y, position
  ivec2 pixel_coords = ivec2(gl_GlobalInvocationID.xy);
  

  ivec2 dims = imageSize(img_output); // fetch image dimensions
  float x = (float(pixel_coords.x * 2 - dims.x) / dims.x);
  float y = (float(pixel_coords.y * 2 - dims.y) / dims.y);
 
  vec4 pixel = vec4(couleur1[0], couleur1[1], couleur1[2], couleur1[3]);

  // output to a secific pixel in the image
  imageStore (img_output, pixel_coords, pixel);
}